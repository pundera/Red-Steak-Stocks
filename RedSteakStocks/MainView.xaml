<UserControl
        xmlns:fluent="urn:fluent-ribbon"
        x:Class="RedSteakStocks.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"

        xmlns:local="clr-namespace:RedSteakStocks"
        xmlns:viewModels="clr-namespace:RedSteakStocks.ViewModels"
        xmlns:views="clr-namespace:RedSteakStocks.Views"

        Resources="{StaticResource Xxx}"
        Opacity="1"
        Background="White">

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CompanySelectionRequest, Mode=OneWay}">
            <!-- This PopupWindowAction has a custom view defined. When this action is executed the view will be shown inside a new window -->
            <!-- Take into account that the view and its view model are created only once and will be reused each time the action is executed -->
            <prism:PopupWindowAction IsModal="True" WindowStartupLocation="CenterOwner" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
                        <Setter Property="WindowStyle" Value="ToolWindow" />
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <views:CompanySelectionView>
                    </views:CompanySelectionView>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <fluent:Ribbon BorderBrush="Transparent" AutomaticStateManagement="True" SelectedTabIndex="0">
            <fluent:RibbonTabItem x:Name="StocksTab" Header="{Binding _[Title]}" IsOpen="True">
                <fluent:RibbonGroupBox Header="{Binding _[StockList]}" FontWeight="Light">
                    <fluent:Button Margin="10,0"
                                   FontWeight="Bold"
                                   Icon="{StaticResource ResourceKey=addStock}"
                                   Header="{Binding _[AddCompany]}" LargeIcon="{DynamicResource addStock}"
                                   Command="{Binding RaiseCompaniesPopupViewCommand}" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox
                    Header="{Binding SelectedCompanyHeader}"
                    FontWeight="Light"
                    IsEnabled="{Binding IsSelected}">
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=reloadSelected}"
                                   Header="Reload"
                                   LargeIcon="{DynamicResource reloadSelected}"
                                   Command="{Binding ReloadSelected}" />
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=checkSelected}"
                                   Header="Select"
                                   LargeIcon="{DynamicResource checkSelected}"
                                   Command="{Binding CheckSelected}" />
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=uncheckSelected}"
                                   Header="Unselect"
                                   LargeIcon="{DynamicResource uncheckSelected}"
                                   Command="{Binding UncheckSelected}" />
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=removeStock}"
                                   Header="Remove"
                                   LargeIcon="{DynamicResource removeStock}"
                                   Command="{Binding RemoveSelected}" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox
                    Header="All Stocks"
                    FontWeight="Light"
                    IsEnabled="{Binding IsSelected}">
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=reloadAll}"
                                   Header="Expand"
                                   LargeIcon="{DynamicResource expandAll}"
                                   Command="{Binding ExpandAll}" />
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=reloadAll}"
                                   Header="Collapse"
                                   LargeIcon="{DynamicResource collapseAll}"
                                   Command="{Binding CollapseAll}" />
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=reloadAll}"
                                   Header="Reload"
                                   LargeIcon="{DynamicResource reloadAll}"
                                   Command="{Binding ReloadAll}" />
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=checkAll}"
                                   Header="Select All"
                                   LargeIcon="{DynamicResource checkAll}"
                                   Command="{Binding CheckAll}" />
                    <fluent:Button Margin="5,0"
                                   Icon="{StaticResource ResourceKey=uncheckAll}"
                                   Header="Unselect All"
                                   LargeIcon="{DynamicResource uncheckAll}"
                                   Command="{Binding UncheckAll}" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox
                    Header="Check All"
                    FontWeight="Light"
                    IsEnabled="{Binding IsSelected}">
                    <fluent:SplitButton
                        Header="Interval to Select"
                        LargeIcon="{DynamicResource check}">
                        <fluent:GalleryGroupContainer Header="Minutes">
                            <fluent:Button Margin="5,0"
                                   Header="One Minute"
                                   LargeIcon="{DynamicResource oneMinute}"
                                   Command="{Binding CheckAllInterval}"
                                   CommandParameter="OneMinute" />
                            <fluent:Button Margin="5,0"
                                   Header="Five Minutes"
                                   LargeIcon="{DynamicResource fiveMinutes}"
                                   Command="{Binding CheckAllInterval}"
                                   CommandParameter="FiveMinutes" />
                            <fluent:Button Margin="5"
                                   Header="Fifteen Minutes"
                                   LargeIcon="{DynamicResource fifteenMinutes}"
                                   Command="{Binding CheckAllInterval}"
                                   CommandParameter="FifteenMinutes" />
                            <fluent:Button Margin="5,0"
                                   Header="Thirty Minutes"
                                   LargeIcon="{DynamicResource thirtyMinutes}"
                                   Command="{Binding CheckAllInterval}"
                                   CommandParameter="ThirtyMinutes" />
                        </fluent:GalleryGroupContainer>

                        <fluent:GalleryGroupContainer Header="Hours">
                            <fluent:Button Margin="5,0"
                                   Header="One Hour"
                                   LargeIcon="{DynamicResource oneHour}"
                                   Command="{Binding CheckAllInterval}"
                                   CommandParameter="SixtyMinutes" />
                        </fluent:GalleryGroupContainer>

                        <fluent:GalleryGroupContainer Header="Days / Weeks">

                            <fluent:Button Margin="5,0"
                                   Header="Days"
                                   LargeIcon="{DynamicResource daily}"
                                   Command="{Binding CheckAllInterval}"
                                   CommandParameter="Daily" />
                            <fluent:Button Margin="5,0"
                                   Header="Weeks"
                                   LargeIcon="{DynamicResource weekly}"
                                   Command="{Binding CheckAllInterval}"
                                   CommandParameter="Weekly" />
                        </fluent:GalleryGroupContainer>

                        <fluent:GalleryGroupContainer Header="Months">
                             <fluent:Button Margin="5,0"
                                   Header="Months"
                                   LargeIcon="{DynamicResource monthly}"
                                   Command="{Binding CheckAllInterval}"
                                   CommandParameter="Monthly" />
                        </fluent:GalleryGroupContainer>
                    </fluent:SplitButton>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox
                    Header="Uncheck All"
                    FontWeight="Light"
                    IsEnabled="{Binding IsSelected}">
                    <fluent:SplitButton
                        Header="Interval to Unselect"
                        LargeIcon="{DynamicResource uncheck}">
                        <fluent:GalleryGroupContainer Header="Minutes">
                            <fluent:Button Margin="5,0"
                                   Header="One Minute"
                                   LargeIcon="{DynamicResource unOneMinute}"
                                   Command="{Binding UncheckAllInterval}"
                                   CommandParameter="OneMinute" />
                            <fluent:Button Margin="5,0"
                                   Header="Five Minutes"
                                   LargeIcon="{DynamicResource unFiveMinutes}"
                                   Command="{Binding UncheckAllInterval}"
                                   CommandParameter="FiveMinutes" />
                            <fluent:Button Margin="5"
                                   Header="Fifteen Minutes"
                                   LargeIcon="{DynamicResource unFifteenMinutes}"
                                   Command="{Binding UncheckAllInterval}"
                                   CommandParameter="FifteenMinutes" />
                            <fluent:Button Margin="5,0"
                                   Header="Thirty Minutes"
                                   LargeIcon="{DynamicResource unThirtyMinutes}"
                                   Command="{Binding UncheckAllInterval}"
                                   CommandParameter="ThirtyMinutes" />
                        </fluent:GalleryGroupContainer>

                        <fluent:GalleryGroupContainer Header="Hours">
                            <fluent:Button Margin="5,0"
                                   Header="One Hour"
                                   LargeIcon="{DynamicResource unOneHour}"
                                   Command="{Binding UncheckAllInterval}"
                                   CommandParameter="SixtyMinutes" />
                        </fluent:GalleryGroupContainer>

                        <fluent:GalleryGroupContainer Header="Days / Weeks">

                            <fluent:Button Margin="5,0"
                                   Header="Days"
                                   LargeIcon="{DynamicResource unDaily}"
                                   Command="{Binding UncheckAllInterval}"
                                   CommandParameter="Daily" />
                            <fluent:Button Margin="5,0"
                                   Header="Weeks"
                                   LargeIcon="{DynamicResource unWeekly}"
                                   Command="{Binding UncheckAllInterval}"
                                   CommandParameter="Weekly" />
                        </fluent:GalleryGroupContainer>

                        <fluent:GalleryGroupContainer Header="Months">
                            <fluent:Button Margin="5,0"
                                   Header="Months"
                                   LargeIcon="{DynamicResource unMonthly}"
                                   Command="{Binding UncheckAllInterval}"
                                   CommandParameter="Monthly" />
                        </fluent:GalleryGroupContainer>
                    </fluent:SplitButton>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox
                    Header="Stock List"
                    FontWeight="Light"
                    IsEnabled="{Binding IsSelected}">
                    <fluent:Button Margin="5,0"
                                   Foreground="Firebrick"
                                   FontWeight="Bold"
                                   Icon="{StaticResource ResourceKey=removeAll}"
                                   Header="Remove All"
                                   LargeIcon="{DynamicResource removeAll}"
                                   Command="{Binding RemoveAll}" />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox
                    Header="{Binding _[Language]}"
                    FontWeight="Light">
                    <fluent:ComboBox
                        SelectedIndex="0"
                        Margin="5,0"
                        Foreground="Black"
                        FontWeight="Bold"
                        Icon="{StaticResource ResourceKey=language}"
                        Header="{Binding _[Language]}" IsReadOnly="True">
                        <fluent:ComboBox.Items>
                            <Label Padding="4" Content="Česky" />
                            <Label Padding="4" Content="English" />
                        </fluent:ComboBox.Items>
                    </fluent:ComboBox>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ListView Grid.Column="0"
            Padding="0"
            Margin="0"
            BorderThickness="0,0,1,0"
            BorderBrush="LightGray"
            Foreground="Transparent"

            HorizontalAlignment="Left"
            HorizontalContentAlignment="Stretch"
            ItemsSource="{Binding CompaniesToShow}"

            ItemTemplate="{StaticResource TreeTemplate}"
            SelectionMode="Single"
            SelectedItem= "{Binding SelectedCompany, Mode=TwoWay}"
            IsSynchronizedWithCurrentItem="True"
            Background="Transparent">

            <!--SelectedIndex="{Binding SelectedCompanyIndex, Mode=TwoWay}"-->
            <!--
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Border.Background" Value="DarkGreen" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Border.Background" Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}" />
                </Style>
            </ListView.ItemContainerStyle>-->
            </ListView>
            <ContentControl
                Grid.Column="1"
                prism:RegionManager.RegionName="Plots">
            </ContentControl>
        </Grid>
    </Grid>
</UserControl>